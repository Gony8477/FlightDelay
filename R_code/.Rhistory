m <- ksvm(TotalDelay ~ DayofMonth + Distance + TaxiOut + TaxiIn + AirTime, data=train_data)
svm_pred <- predict(m, test_data)
svm_df <- data.frame(test_data$ID[1:298], svm_pred)
names(svm_df) <- c("ID", "TotalDelay")
write.csv(svm_df, "FinalSVM_Top6.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
#train_data$TailNum <- as.factor(train_data$TailNum)
train_data$Origin <- as.factor(train_data$Origin)
train_data$Dest <- as.factor(train_data$Dest)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
#test_data$TailNum <- as.factor(test_data$TailNum)
test_data$Origin <- as.factor(test_data$Origin)
test_data$Dest <- as.factor(test_data$Dest)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of CRSElapsedTime
train_data$CRSElapsedTime[is.na(train_data$CRSElapsedTime)] <- median(train_data$CRSElapsedTime, na.rm=TRUE)
test_data$CRSElapsedTime[is.na(test_data$CRSElapsedTime)] <- median(test_data$CRSElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
# Null of Distance
train_data$Distance[is.na(train_data$Distance)] <- median(train_data$Distance, na.rm=TRUE)
test_data$Distance[is.na(test_data$Distance)] <- median(test_data$Distance, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Null of TaxiOut
train_data$TaxiOut[is.na(train_data$TaxiOut)] <- median(train_data$TaxiOut, na.rm=TRUE)
test_data$TaxiOut[is.na(test_data$TaxiOut)] <- median(test_data$TaxiOut, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ DayofMonth + AirTime + Distance + TaxiOut + TaxiIn, data = train_data, na.action = na.omit)
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID, ran_pre)
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final_Top6.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
#train_data$TailNum <- as.factor(train_data$TailNum)
train_data$Origin <- as.factor(train_data$Origin)
train_data$Dest <- as.factor(train_data$Dest)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
#test_data$TailNum <- as.factor(test_data$TailNum)
test_data$Origin <- as.factor(test_data$Origin)
test_data$Dest <- as.factor(test_data$Dest)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of CRSElapsedTime
train_data$CRSElapsedTime[is.na(train_data$CRSElapsedTime)] <- median(train_data$CRSElapsedTime, na.rm=TRUE)
test_data$CRSElapsedTime[is.na(test_data$CRSElapsedTime)] <- median(test_data$CRSElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
# Null of Distance
train_data$Distance[is.na(train_data$Distance)] <- median(train_data$Distance, na.rm=TRUE)
test_data$Distance[is.na(test_data$Distance)] <- median(test_data$Distance, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Null of TaxiOut
train_data$TaxiOut[is.na(train_data$TaxiOut)] <- median(train_data$TaxiOut, na.rm=TRUE)
test_data$TaxiOut[is.na(test_data$TaxiOut)] <- median(test_data$TaxiOut, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ DayofMonth + AirTime + Distance + TaxiOut + TaxiIn, train_data, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final_Top6.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
#train_data$TailNum <- as.factor(train_data$TailNum)
train_data$Origin <- as.factor(train_data$Origin)
train_data$Dest <- as.factor(train_data$Dest)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
#test_data$TailNum <- as.factor(test_data$TailNum)
test_data$Origin <- as.factor(test_data$Origin)
test_data$Dest <- as.factor(test_data$Dest)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of CRSElapsedTime
train_data$CRSElapsedTime[is.na(train_data$CRSElapsedTime)] <- median(train_data$CRSElapsedTime, na.rm=TRUE)
test_data$CRSElapsedTime[is.na(test_data$CRSElapsedTime)] <- median(test_data$CRSElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
# Null of Distance
train_data$Distance[is.na(train_data$Distance)] <- median(train_data$Distance, na.rm=TRUE)
test_data$Distance[is.na(test_data$Distance)] <- median(test_data$Distance, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Null of TaxiOut
train_data$TaxiOut[is.na(train_data$TaxiOut)] <- median(train_data$TaxiOut, na.rm=TRUE)
test_data$TaxiOut[is.na(test_data$TaxiOut)] <- median(test_data$TaxiOut, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ ActualElapsedTime + CRSElapsedTime + AirTime + TotalDelay + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
#train_data$TailNum <- as.factor(train_data$TailNum)
train_data$Origin <- as.factor(train_data$Origin)
train_data$Dest <- as.factor(train_data$Dest)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
#test_data$TailNum <- as.factor(test_data$TailNum)
test_data$Origin <- as.factor(test_data$Origin)
test_data$Dest <- as.factor(test_data$Dest)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of CRSElapsedTime
train_data$CRSElapsedTime[is.na(train_data$CRSElapsedTime)] <- median(train_data$CRSElapsedTime, na.rm=TRUE)
test_data$CRSElapsedTime[is.na(test_data$CRSElapsedTime)] <- median(test_data$CRSElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
# Null of Distance
train_data$Distance[is.na(train_data$Distance)] <- median(train_data$Distance, na.rm=TRUE)
test_data$Distance[is.na(test_data$Distance)] <- median(test_data$Distance, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Null of TaxiOut
train_data$TaxiOut[is.na(train_data$TaxiOut)] <- median(train_data$TaxiOut, na.rm=TRUE)
test_data$TaxiOut[is.na(test_data$TaxiOut)] <- median(test_data$TaxiOut, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ ActualElapsedTime + CRSElapsedTime + AirTime + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
#train_data$TailNum <- as.factor(train_data$TailNum)
train_data$Origin <- as.factor(train_data$Origin)
train_data$Dest <- as.factor(train_data$Dest)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
#test_data$TailNum <- as.factor(test_data$TailNum)
test_data$Origin <- as.factor(test_data$Origin)
test_data$Dest <- as.factor(test_data$Dest)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of CRSElapsedTime
train_data$CRSElapsedTime[is.na(train_data$CRSElapsedTime)] <- median(train_data$CRSElapsedTime, na.rm=TRUE)
test_data$CRSElapsedTime[is.na(test_data$CRSElapsedTime)] <- median(test_data$CRSElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
# Null of Distance
train_data$Distance[is.na(train_data$Distance)] <- median(train_data$Distance, na.rm=TRUE)
test_data$Distance[is.na(test_data$Distance)] <- median(test_data$Distance, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Null of TaxiOut
train_data$TaxiOut[is.na(train_data$TaxiOut)] <- median(train_data$TaxiOut, na.rm=TRUE)
test_data$TaxiOut[is.na(test_data$TaxiOut)] <- median(test_data$TaxiOut, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ ActualElapsedTime + CRSElapsedTime + AirTime + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay,train_data, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ ActualElapsedTime + CRSElapsedTime + AirTime + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay,train_data, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes 20
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
# Test Attributes 19
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(randomForest)
ran_For <- randomForest(TotalDelay ~ ActualElapsedTime + CRSElapsedTime + AirTime + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay,train_data, na.action = na.omit)
factor(test_data$Survived, levels=levels(test_data$Survived))
ran_pre = predict(ran_For, test_data)
random_forest <- data.frame(test_data$ID[1:297], ran_pre[1:297])
names(random_forest) <- c("ID", "TotalDelay")
write.csv(random_forest, "RandomForest_Final.csv", row.names=FALSE)
trainFinal.csv
test_data
write.csv(decision_tree, "Decisiontree_Final_Top6.csv", row.names=FALSE)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
# Test Attributes
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(rpart)
fit <- rpart(TotalDelay ~ DayofMonth + FlightNum + Distance + TaxiOut + TaxiIn + AirTime, data=train_data)
rpartpred <- predict(fit, newdata = test_data)
decision_tree <- data.frame(test_data$ID, rpartpred)
names(decision_tree) <- c("ID", "TotalDelay")
write.csv(decision_tree, "Decisiontree_Final_Top6.csv", row.names=FALSE)
train_data <- read.csv("train.csv")
test_data <- read.csv("test.csv")
train_data$Survived <- as.factor(train_data$Survived)
train_data$Pclass <- as.factor(train_data$Pclass)
train_data$Name <- as.character(train_data$Name)
train_data$Ticket <- as.character(train_data$Ticket)
train_data$Cabin <- as.character(train_data$Cabin)
test_data$Pclass <- as.factor(test_data$Pclass)
test_data$Name <- as.character(test_data$Name)
test_data$Ticket <- as.character(test_data$Ticket)
test_data$Cabin <- as.character(test_data$Cabin)
# Age NA -> Median of Age
train_data$Age[is.na(train_data$Age)] <- median(train_data$Age, na.rm=TRUE)
test_data$Age[is.na(test_data$Age)] <- median(test_data$Age, na.rm=TRUE)
# Embarked Na -> Mode of Embarked
levels(train_data$Embarked)[1] <- NA
train_data$Embarked[is.na(train_data$Embarked)] <- names(table(train_data$Embarked))[which.max(table(train_data$Embarked))]
# New column Gender -> Male : 1 , FeMale : 0
train_data$Gender <- ifelse(train_data$Sex=='male',1,0)
test_data$Gender <- ifelse(test_data$Sex=='male',1,0)
# Fare NA -> Median of Fare
train_data$Fare[is.na(train_data$Fare)] <- median(train_data$Fare, na.rm=TRUE)
test_data$Fare[is.na(test_data$Fare)] <- median(test_data$Fare, na.rm=TRUE)
library(adabag)
ada_boo <- boosting(Survived ~ Pclass + Gender + Age + SibSp + Parch + Fare + Embarked, data = train_data, boos=TRUE, mfinal = 6)
train_data <- read.csv("trainFinal.csv")
test_data <- read.csv("testFinal.csv")
# Train Attributes
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
# Test Attributes
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Train 5가지 Delay 빈값 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5가지 Delay 빈값 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(adabag)
ada_boo <- boosting(TotalDelay ~ DayofMonth + FlightNum + ActualElapsedTime + CRSElapsedTime + AirTime + Distance + TaxiOut + TaxiIn + CarrierDelay + WeatherDelay + NASDelay + SecurityDelay + LateAircraftDelay, data = train_data, boos=TRUE, mfinal = 6)
ada_pre <- predict(ada_boo, test_data)
ada_pre
ada_df <- data.frame(test_data$ID[1:298], ada_pre)
names(ada_df) <- c("ID", "TotalDelay")
write.csv(ada_df, "AdaBoost.csv", row.names=FALSE)
train_data <- read.csv("train.csv")
test_data <- read.csv("test.csv")
train_data$Survived <- as.factor(train_data$Survived)
train_data$Pclass <- as.factor(train_data$Pclass)
train_data$Name <- as.character(train_data$Name)
train_data$Ticket <- as.character(train_data$Ticket)
train_data$Cabin <- as.character(train_data$Cabin)
test_data$Pclass <- as.factor(test_data$Pclass)
test_data$Name <- as.character(test_data$Name)
test_data$Ticket <- as.character(test_data$Ticket)
test_data$Cabin <- as.character(test_data$Cabin)
# Age NA -> Median of Age
train_data$Age[is.na(train_data$Age)] <- median(train_data$Age, na.rm=TRUE)
test_data$Age[is.na(test_data$Age)] <- median(test_data$Age, na.rm=TRUE)
# Embarked Na -> Mode of Embarked
levels(train_data$Embarked)[1] <- NA
train_data$Embarked[is.na(train_data$Embarked)] <- names(table(train_data$Embarked))[which.max(table(train_data$Embarked))]
# New column Gender -> Male : 1 , FeMale : 0
train_data$Gender <- ifelse(train_data$Sex=='male',1,0)
test_data$Gender <- ifelse(test_data$Sex=='male',1,0)
# Fare NA -> Median of Fare
train_data$Fare[is.na(train_data$Fare)] <- median(train_data$Fare, na.rm=TRUE)
test_data$Fare[is.na(test_data$Fare)] <- median(test_data$Fare, na.rm=TRUE)
library(adabag)
ada_boo <- boosting(Survived ~ Pclass + Gender + Age + SibSp + Parch + Fare + Embarked, data = train_data, boos=TRUE, mfinal = 6)
ada_pre <- predict(ada_boo, test_data)
ada_pre
ada_df <- data.frame(test_data$PassengerId, ada_pre$class)
names(ada_df) <- c("PassengerID", "Survived")
write.csv(ada_df, "AdaBoost.csv", row.names=FALSE)
train_data <- read.csv("Train.csv")
test_data <- read.csv("Test.csv")
# Train Attributes
train_data$ID <- as.character(train_data$ID)
train_data$FlightNum <- as.factor(train_data$FlightNum)
train_data$DayofMonth <- as.factor(train_data$DayofMonth)
# Test Attributes
test_data$ID <- as.character(test_data$ID)
test_data$FlightNum <- as.factor(test_data$FlightNum)
test_data$DayofMonth <- as.factor(test_data$DayofMonth)
# Null of ActualElapsedTime
train_data$ActualElapsedTime[is.na(train_data$ActualElapsedTime)] <- median(train_data$ActualElapsedTime, na.rm=TRUE)
test_data$ActualElapsedTime[is.na(test_data$ActualElapsedTime)] <- median(test_data$ActualElapsedTime, na.rm=TRUE)
# Null of AirTime
train_data$AirTime[is.na(train_data$AirTime)] <- median(train_data$AirTime, na.rm=TRUE)
test_data$AirTime[is.na(test_data$AirTime)] <- median(test_data$AirTime, na.rm=TRUE)
#Null of TaxiIn
train_data$TaxiIn[is.na(train_data$TaxiIn)] <- median(train_data$TaxiIn, na.rm=TRUE)
test_data$TaxiIn[is.na(test_data$TaxiIn)] <- median(test_data$TaxiIn, na.rm=TRUE)
# Train 5媛吏 Delay 鍮덇컪 = 0
train_data$CarrierDelay[is.na(train_data$CarrierDelay)] <- 0
train_data$WeatherDelay[is.na(train_data$WeatherDelay)] <- 0
train_data$NASDelay[is.na(train_data$NASDelay)] <- 0
train_data$SecurityDelay[is.na(train_data$SecurityDelay)] <- 0
train_data$LateAircraftDelay[is.na(train_data$LateAircraftDelay)] <- 0
# Test 5媛吏 Delay 鍮덇컪 = 0
test_data$CarrierDelay[is.na(test_data$CarrierDelay)] <- 0
test_data$WeatherDelay[is.na(test_data$WeatherDelay)] <- 0
test_data$NASDelay[is.na(test_data$NASDelay)] <- 0
test_data$SecurityDelay[is.na(test_data$SecurityDelay)] <- 0
test_data$LateAircraftDelay[is.na(test_data$LateAircraftDelay)] <- 0
library(kernlab)
m <- ksvm(TotalDelay ~ DayofMonth + FlightNum + Distance + TaxiOut + TaxiIn + AirTime, data = train_data)
svm_pred <- predict(m, test_data)
